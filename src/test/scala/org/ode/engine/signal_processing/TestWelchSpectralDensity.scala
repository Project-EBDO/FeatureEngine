/** Copyright (C) 2017 Project-ODE
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */

package org.ode.engine.signal_processing

import org.ode.utils.test.ErrorMetrics.rmse
import org.scalatest.{FlatSpec, Matchers}

/**
  * Tests for WelchSpectralDensity Functions
  * Author: Alexandre Degurse
  */

class TestWelchSpectralDensity extends FlatSpec with Matchers {

  val maxRMSE = 1.0E-16

  it should "compute the same Welch PSD as scipy when given normalized PSDs without overlap, windows and winSize equals nfft" in {

    val signal = (1.0 to 1024.0 by 1.0).toArray

    val nfft = 256
    val winSize = 256
    val fs = 64

    val welchClass = new WelchSpectralDensity(nfft)

    /**
      These values have been generated with this python code:
      numpy.set_printoptions(precision=24, linewidth=100)

      *************************************************************

      signalLength = 1024; winSize = 256; nfft = 256; fs = 64

      nOneSided = int(nfft/2 + 1)
      nWindows = (signalLength // winSize)

      signal = numpy.arange(1, signalLength + 1)
      psds = numpy.zeros((nWindows, nOneSided))

      for i in range(nWindows):
          segment = signal[i*winSize:(i+1)*winSize]

          psds[i] = scipy.signal.periodogram(
              x=segment, fs=fs, window="boxcar", detrend=False,
              nfft=nfft, return_onesided=True,
              scaling='density', axis=-1)[1]


      psdWelch = scipy.signal.welch(
          x=signal, fs=fs, window='boxcar', detrend=False, noverlap=0,
          nperseg=winSize, nfft=nfft, return_onesided=True,
          scaling='density', axis=-1)[1]

     *************************************************************/

    val psds = Array(
      Array(
        6.6049000000000000e+04, 1.3281036869115400e+04, 3.3207592925855174e+03,
        1.4762635343532418e+03, 8.3069012446380282e+02, 5.3188197625560167e+02,
        3.6956656189308825e+02, 2.7169561463412532e+02, 2.0817373783963490e+02,
        1.6462348371864329e+02, 1.3347238127660972e+02, 1.1042422883753075e+02,
        9.2894361068951142e+01, 7.9252145989572725e+01, 6.8427611542329771e+01,
        5.9695076505803122e+01, 5.2548284738176335e+01, 4.6625348054459593e+01,
        4.1662020103058929e+01, 3.7461707530702697e+01, 3.3875701479399076e+01,
        3.0789834167779215e+01, 2.8115280240163870e+01, 2.5782094228835962e+01,
        2.3734592049837236e+01, 2.1927998809243512e+01, 2.0325981121612838e+01,
        1.8898806928442980e+01, 1.7621956866551816e+01, 1.6475064854893233e+01,
        1.5441101627949397e+01, 1.4505739568644312e+01, 1.3656854249492380e+01,
        1.2884130060114744e+01, 1.2178745802422124e+01, 1.1533122244711979e+01,
        1.0940718063260105e+01, 1.0395863854925423e+01, 9.8936263143904135e+00,
        9.4296964700234618e+00, 9.0002972284627152e+00, 8.6021065075598262e+00,
        8.2321930247546895e+00, 7.8879624144675429e+00, 7.5671118183833679e+00,
        7.2675914594859545e+00, 6.9875719987960965e+00, 6.7254167012427022e+00,
        6.4796576176871055e+00, 6.2489751342455397e+00, 6.0321803556505529e+00,
        5.8281998825513295e+00, 5.6360626180733808e+00, 5.4548883002871627e+00,
        5.2838775073139672e+00, 5.1223029228571795e+00, 4.9695016837406616e+00,
        4.8248686589554008e+00, 4.6878505328627762e+00, 4.5579405844618979e+00,
        4.4346740707040677e+00, 4.3176241353008038e+00, 4.2063981757806435e+00,
        4.1006346110794754e+00, 4.0000000000000000e+00, 3.9041864677001055e+00,
        3.8129094031655373e+00, 3.7259053955618535e+00, 3.6429303815780454e+00,
        3.5637579794846896e+00, 3.4881779887290394e+00, 3.4159950365547855e+00,
        3.3470273554319867e+00, 3.2811056770685476e+00, 3.2180722304930960e+00,
        3.1577798331910110e+00, 3.1000910655712230e+00, 3.0448775201712377e+00,
        2.9920191179927209e+00, 2.9414034852219215e+00, 2.8929253843433806e+00,
        2.8464861943176532e+00, 2.8019934350753348e+00, 2.7593603320919646e+00,
        2.7185054172598928e+00, 2.6793521626720085e+00, 2.6418286442848848e+00,
        2.6058672327415167e+00, 2.5714043089108114e+00, 2.5383800019474303e+00,
        2.5067379478944751e+00, 2.4764250670469656e+00, 2.4473913584678559e+00,
        2.4195897102042152e+00, 2.3929757238900882e+00, 2.3675075525473694e+00,
        2.3431457505076194e+00, 2.3198531344782864e+00, 2.2975946548668635e+00,
        2.2763372765578942e+00, 2.2560498684108174e+00, 2.2367031008128451e+00,
        2.2182693506806372e+00, 2.2007226133586846e+00, 2.1840384209111479e+00,
        2.1681937663483843e+00, 2.1531670333695399e+00, 2.1389379312395209e+00,
        2.1254874344517636e+00, 2.1127977268589513e+00, 2.1008521499814283e+00,
        2.0896351552287857e+00, 2.0791322597931616e+00, 2.0693300059944963e+00,
        2.0602159238775486e+00, 2.0517784968787836e+00, 2.0440071303979579e+00,
        2.0368921231249373e+00, 2.0304246409866473e+00, 2.0245966935926769e+00,
        2.0194011130705296e+00, 2.0148315351935806e+00, 2.0108823827156619e+00,
        2.0075488508370629e+00, 2.0048268947365444e+00, 2.0027132191136796e+00,
        2.0012052696948959e+00, 2.0003012266657176e+00, 1.0000000000000000e+00
      ),
      Array(
        5.9136100000000000e+05, 1.3281036869115400e+04, 3.3207592925855174e+03,
        1.4762635343532418e+03, 8.3069012446380282e+02, 5.3188197625560167e+02,
        3.6956656189308825e+02, 2.7169561463412532e+02, 2.0817373783963490e+02,
        1.6462348371864329e+02, 1.3347238127660972e+02, 1.1042422883753075e+02,
        9.2894361068951142e+01, 7.9252145989572725e+01, 6.8427611542329771e+01,
        5.9695076505803122e+01, 5.2548284738176335e+01, 4.6625348054459593e+01,
        4.1662020103058929e+01, 3.7461707530702697e+01, 3.3875701479399076e+01,
        3.0789834167779215e+01, 2.8115280240163870e+01, 2.5782094228835962e+01,
        2.3734592049837236e+01, 2.1927998809243512e+01, 2.0325981121612838e+01,
        1.8898806928442980e+01, 1.7621956866551816e+01, 1.6475064854893233e+01,
        1.5441101627949397e+01, 1.4505739568644312e+01, 1.3656854249492380e+01,
        1.2884130060114744e+01, 1.2178745802422124e+01, 1.1533122244711979e+01,
        1.0940718063260105e+01, 1.0395863854925423e+01, 9.8936263143904135e+00,
        9.4296964700234618e+00, 9.0002972284627152e+00, 8.6021065075598262e+00,
        8.2321930247546895e+00, 7.8879624144675429e+00, 7.5671118183833679e+00,
        7.2675914594859545e+00, 6.9875719987960965e+00, 6.7254167012427022e+00,
        6.4796576176871055e+00, 6.2489751342455397e+00, 6.0321803556505529e+00,
        5.8281998825513295e+00, 5.6360626180733808e+00, 5.4548883002871627e+00,
        5.2838775073139672e+00, 5.1223029228571795e+00, 4.9695016837406616e+00,
        4.8248686589554008e+00, 4.6878505328627762e+00, 4.5579405844618979e+00,
        4.4346740707040677e+00, 4.3176241353008038e+00, 4.2063981757806435e+00,
        4.1006346110794754e+00, 4.0000000000000000e+00, 3.9041864677001055e+00,
        3.8129094031655373e+00, 3.7259053955618535e+00, 3.6429303815780454e+00,
        3.5637579794846896e+00, 3.4881779887290394e+00, 3.4159950365547855e+00,
        3.3470273554319867e+00, 3.2811056770685476e+00, 3.2180722304930960e+00,
        3.1577798331910110e+00, 3.1000910655712230e+00, 3.0448775201712377e+00,
        2.9920191179927209e+00, 2.9414034852219215e+00, 2.8929253843433806e+00,
        2.8464861943176532e+00, 2.8019934350753348e+00, 2.7593603320919646e+00,
        2.7185054172598928e+00, 2.6793521626720085e+00, 2.6418286442848848e+00,
        2.6058672327415167e+00, 2.5714043089108114e+00, 2.5383800019474303e+00,
        2.5067379478944751e+00, 2.4764250670469656e+00, 2.4473913584678559e+00,
        2.4195897102042152e+00, 2.3929757238900882e+00, 2.3675075525473694e+00,
        2.3431457505076194e+00, 2.3198531344782864e+00, 2.2975946548668635e+00,
        2.2763372765578942e+00, 2.2560498684108174e+00, 2.2367031008128451e+00,
        2.2182693506806372e+00, 2.2007226133586846e+00, 2.1840384209111479e+00,
        2.1681937663483843e+00, 2.1531670333695399e+00, 2.1389379312395209e+00,
        2.1254874344517636e+00, 2.1127977268589513e+00, 2.1008521499814283e+00,
        2.0896351552287857e+00, 2.0791322597931616e+00, 2.0693300059944963e+00,
        2.0602159238775486e+00, 2.0517784968787836e+00, 2.0440071303979579e+00,
        2.0368921231249373e+00, 2.0304246409866473e+00, 2.0245966935926769e+00,
        2.0194011130705296e+00, 2.0148315351935806e+00, 2.0108823827156619e+00,
        2.0075488508370629e+00, 2.0048268947365444e+00, 2.0027132191136796e+00,
        2.0012052696948959e+00, 2.0003012266657176e+00, 1.0000000000000000e+00
      ),
      Array(
        1.6409610000000000e+06, 1.3281036869115400e+04, 3.3207592925855174e+03,
        1.4762635343532418e+03, 8.3069012446380282e+02, 5.3188197625560167e+02,
        3.6956656189308825e+02, 2.7169561463412532e+02, 2.0817373783963490e+02,
        1.6462348371864329e+02, 1.3347238127660972e+02, 1.1042422883753075e+02,
        9.2894361068951142e+01, 7.9252145989572725e+01, 6.8427611542329771e+01,
        5.9695076505803122e+01, 5.2548284738176335e+01, 4.6625348054459593e+01,
        4.1662020103058929e+01, 3.7461707530702697e+01, 3.3875701479399076e+01,
        3.0789834167779215e+01, 2.8115280240163870e+01, 2.5782094228835962e+01,
        2.3734592049837236e+01, 2.1927998809243512e+01, 2.0325981121612838e+01,
        1.8898806928442980e+01, 1.7621956866551816e+01, 1.6475064854893233e+01,
        1.5441101627949397e+01, 1.4505739568644312e+01, 1.3656854249492380e+01,
        1.2884130060114744e+01, 1.2178745802422124e+01, 1.1533122244711979e+01,
        1.0940718063260105e+01, 1.0395863854925423e+01, 9.8936263143904135e+00,
        9.4296964700234618e+00, 9.0002972284627152e+00, 8.6021065075598262e+00,
        8.2321930247546895e+00, 7.8879624144675429e+00, 7.5671118183833679e+00,
        7.2675914594859545e+00, 6.9875719987960965e+00, 6.7254167012427022e+00,
        6.4796576176871055e+00, 6.2489751342455397e+00, 6.0321803556505529e+00,
        5.8281998825513295e+00, 5.6360626180733808e+00, 5.4548883002871627e+00,
        5.2838775073139672e+00, 5.1223029228571795e+00, 4.9695016837406616e+00,
        4.8248686589554008e+00, 4.6878505328627762e+00, 4.5579405844618979e+00,
        4.4346740707040677e+00, 4.3176241353008038e+00, 4.2063981757806435e+00,
        4.1006346110794754e+00, 4.0000000000000000e+00, 3.9041864677001055e+00,
        3.8129094031655373e+00, 3.7259053955618535e+00, 3.6429303815780454e+00,
        3.5637579794846896e+00, 3.4881779887290394e+00, 3.4159950365547855e+00,
        3.3470273554319867e+00, 3.2811056770685476e+00, 3.2180722304930960e+00,
        3.1577798331910110e+00, 3.1000910655712230e+00, 3.0448775201712377e+00,
        2.9920191179927209e+00, 2.9414034852219215e+00, 2.8929253843433806e+00,
        2.8464861943176532e+00, 2.8019934350753348e+00, 2.7593603320919646e+00,
        2.7185054172598928e+00, 2.6793521626720085e+00, 2.6418286442848848e+00,
        2.6058672327415167e+00, 2.5714043089108114e+00, 2.5383800019474303e+00,
        2.5067379478944751e+00, 2.4764250670469656e+00, 2.4473913584678559e+00,
        2.4195897102042152e+00, 2.3929757238900882e+00, 2.3675075525473694e+00,
        2.3431457505076194e+00, 2.3198531344782864e+00, 2.2975946548668635e+00,
        2.2763372765578942e+00, 2.2560498684108174e+00, 2.2367031008128451e+00,
        2.2182693506806372e+00, 2.2007226133586846e+00, 2.1840384209111479e+00,
        2.1681937663483843e+00, 2.1531670333695399e+00, 2.1389379312395209e+00,
        2.1254874344517636e+00, 2.1127977268589513e+00, 2.1008521499814283e+00,
        2.0896351552287857e+00, 2.0791322597931616e+00, 2.0693300059944963e+00,
        2.0602159238775486e+00, 2.0517784968787836e+00, 2.0440071303979579e+00,
        2.0368921231249373e+00, 2.0304246409866473e+00, 2.0245966935926769e+00,
        2.0194011130705296e+00, 2.0148315351935806e+00, 2.0108823827156619e+00,
        2.0075488508370629e+00, 2.0048268947365444e+00, 2.0027132191136796e+00,
        2.0012052696948959e+00, 2.0003012266657176e+00, 1.0000000000000000e+00
      ),
      Array(
        3.2148490000000000e+06, 1.3281036869115400e+04, 3.3207592925855174e+03,
        1.4762635343532418e+03, 8.3069012446380282e+02, 5.3188197625560167e+02,
        3.6956656189308825e+02, 2.7169561463412532e+02, 2.0817373783963490e+02,
        1.6462348371864329e+02, 1.3347238127660972e+02, 1.1042422883753075e+02,
        9.2894361068951142e+01, 7.9252145989572725e+01, 6.8427611542329771e+01,
        5.9695076505803122e+01, 5.2548284738176335e+01, 4.6625348054459593e+01,
        4.1662020103058929e+01, 3.7461707530702697e+01, 3.3875701479399076e+01,
        3.0789834167779215e+01, 2.8115280240163870e+01, 2.5782094228835962e+01,
        2.3734592049837236e+01, 2.1927998809243512e+01, 2.0325981121612838e+01,
        1.8898806928442980e+01, 1.7621956866551816e+01, 1.6475064854893233e+01,
        1.5441101627949397e+01, 1.4505739568644312e+01, 1.3656854249492380e+01,
        1.2884130060114744e+01, 1.2178745802422124e+01, 1.1533122244711979e+01,
        1.0940718063260105e+01, 1.0395863854925423e+01, 9.8936263143904135e+00,
        9.4296964700234618e+00, 9.0002972284627152e+00, 8.6021065075598262e+00,
        8.2321930247546895e+00, 7.8879624144675429e+00, 7.5671118183833679e+00,
        7.2675914594859545e+00, 6.9875719987960965e+00, 6.7254167012427022e+00,
        6.4796576176871055e+00, 6.2489751342455397e+00, 6.0321803556505529e+00,
        5.8281998825513295e+00, 5.6360626180733808e+00, 5.4548883002871627e+00,
        5.2838775073139672e+00, 5.1223029228571795e+00, 4.9695016837406616e+00,
        4.8248686589554008e+00, 4.6878505328627762e+00, 4.5579405844618979e+00,
        4.4346740707040677e+00, 4.3176241353008038e+00, 4.2063981757806435e+00,
        4.1006346110794754e+00, 4.0000000000000000e+00, 3.9041864677001055e+00,
        3.8129094031655373e+00, 3.7259053955618535e+00, 3.6429303815780454e+00,
        3.5637579794846896e+00, 3.4881779887290394e+00, 3.4159950365547855e+00,
        3.3470273554319867e+00, 3.2811056770685476e+00, 3.2180722304930960e+00,
        3.1577798331910110e+00, 3.1000910655712230e+00, 3.0448775201712377e+00,
        2.9920191179927209e+00, 2.9414034852219215e+00, 2.8929253843433806e+00,
        2.8464861943176532e+00, 2.8019934350753348e+00, 2.7593603320919646e+00,
        2.7185054172598928e+00, 2.6793521626720085e+00, 2.6418286442848848e+00,
        2.6058672327415167e+00, 2.5714043089108114e+00, 2.5383800019474303e+00,
        2.5067379478944751e+00, 2.4764250670469656e+00, 2.4473913584678559e+00,
        2.4195897102042152e+00, 2.3929757238900882e+00, 2.3675075525473694e+00,
        2.3431457505076194e+00, 2.3198531344782864e+00, 2.2975946548668635e+00,
        2.2763372765578942e+00, 2.2560498684108174e+00, 2.2367031008128451e+00,
        2.2182693506806372e+00, 2.2007226133586846e+00, 2.1840384209111479e+00,
        2.1681937663483843e+00, 2.1531670333695399e+00, 2.1389379312395209e+00,
        2.1254874344517636e+00, 2.1127977268589513e+00, 2.1008521499814283e+00,
        2.0896351552287857e+00, 2.0791322597931616e+00, 2.0693300059944963e+00,
        2.0602159238775486e+00, 2.0517784968787836e+00, 2.0440071303979579e+00,
        2.0368921231249373e+00, 2.0304246409866473e+00, 2.0245966935926769e+00,
        2.0194011130705296e+00, 2.0148315351935806e+00, 2.0108823827156619e+00,
        2.0075488508370629e+00, 2.0048268947365444e+00, 2.0027132191136796e+00,
        2.0012052696948959e+00, 2.0003012266657176e+00, 1.0000000000000000e+00
      )
    )

    val psdAgg = welchClass.compute(psds)

    val expectedWelchPSD = Array(
      1.3783050000000000e+06, 1.3281036869115400e+04, 3.3207592925855174e+03,
      1.4762635343532418e+03, 8.3069012446380282e+02, 5.3188197625560167e+02,
      3.6956656189308825e+02, 2.7169561463412532e+02, 2.0817373783963490e+02,
      1.6462348371864329e+02, 1.3347238127660972e+02, 1.1042422883753075e+02,
      9.2894361068951142e+01, 7.9252145989572725e+01, 6.8427611542329771e+01,
      5.9695076505803122e+01, 5.2548284738176335e+01, 4.6625348054459593e+01,
      4.1662020103058929e+01, 3.7461707530702697e+01, 3.3875701479399076e+01,
      3.0789834167779215e+01, 2.8115280240163870e+01, 2.5782094228835962e+01,
      2.3734592049837236e+01, 2.1927998809243512e+01, 2.0325981121612838e+01,
      1.8898806928442980e+01, 1.7621956866551816e+01, 1.6475064854893233e+01,
      1.5441101627949397e+01, 1.4505739568644312e+01, 1.3656854249492380e+01,
      1.2884130060114744e+01, 1.2178745802422124e+01, 1.1533122244711979e+01,
      1.0940718063260105e+01, 1.0395863854925423e+01, 9.8936263143904135e+00,
      9.4296964700234618e+00, 9.0002972284627152e+00, 8.6021065075598262e+00,
      8.2321930247546895e+00, 7.8879624144675429e+00, 7.5671118183833679e+00,
      7.2675914594859545e+00, 6.9875719987960965e+00, 6.7254167012427022e+00,
      6.4796576176871055e+00, 6.2489751342455397e+00, 6.0321803556505529e+00,
      5.8281998825513295e+00, 5.6360626180733808e+00, 5.4548883002871627e+00,
      5.2838775073139672e+00, 5.1223029228571795e+00, 4.9695016837406616e+00,
      4.8248686589554008e+00, 4.6878505328627762e+00, 4.5579405844618979e+00,
      4.4346740707040677e+00, 4.3176241353008038e+00, 4.2063981757806435e+00,
      4.1006346110794754e+00, 4.0000000000000000e+00, 3.9041864677001055e+00,
      3.8129094031655373e+00, 3.7259053955618535e+00, 3.6429303815780454e+00,
      3.5637579794846896e+00, 3.4881779887290394e+00, 3.4159950365547855e+00,
      3.3470273554319867e+00, 3.2811056770685476e+00, 3.2180722304930960e+00,
      3.1577798331910110e+00, 3.1000910655712230e+00, 3.0448775201712377e+00,
      2.9920191179927209e+00, 2.9414034852219215e+00, 2.8929253843433806e+00,
      2.8464861943176532e+00, 2.8019934350753348e+00, 2.7593603320919646e+00,
      2.7185054172598928e+00, 2.6793521626720085e+00, 2.6418286442848848e+00,
      2.6058672327415167e+00, 2.5714043089108114e+00, 2.5383800019474303e+00,
      2.5067379478944751e+00, 2.4764250670469656e+00, 2.4473913584678559e+00,
      2.4195897102042152e+00, 2.3929757238900882e+00, 2.3675075525473694e+00,
      2.3431457505076194e+00, 2.3198531344782864e+00, 2.2975946548668635e+00,
      2.2763372765578942e+00, 2.2560498684108174e+00, 2.2367031008128451e+00,
      2.2182693506806372e+00, 2.2007226133586846e+00, 2.1840384209111479e+00,
      2.1681937663483843e+00, 2.1531670333695399e+00, 2.1389379312395209e+00,
      2.1254874344517636e+00, 2.1127977268589513e+00, 2.1008521499814283e+00,
      2.0896351552287857e+00, 2.0791322597931616e+00, 2.0693300059944963e+00,
      2.0602159238775486e+00, 2.0517784968787836e+00, 2.0440071303979579e+00,
      2.0368921231249373e+00, 2.0304246409866473e+00, 2.0245966935926769e+00,
      2.0194011130705296e+00, 2.0148315351935806e+00, 2.0108823827156619e+00,
      2.0075488508370629e+00, 2.0048268947365444e+00, 2.0027132191136796e+00,
      2.0012052696948959e+00, 2.0003012266657176e+00, 1.0000000000000000e+00
    )

    rmse(expectedWelchPSD, psdAgg) should be < (maxRMSE)
  }

  it should "raise IllegalArgumentException when given PSDs with inconsistent shape" in {
    val welchClass = new WelchSpectralDensity(1)
    val wrongPDS = Array(Array(1.0), Array(2.0, 3.0))

    an [IllegalArgumentException] should be thrownBy welchClass.compute(wrongPDS)
  }

    it should "raise IllegalArgumentException when given PSDs with incorrect shape" in {
    val welchClass = new WelchSpectralDensity(100)
    val wrongPDS = Array(Array(1.0), Array(2.0))

    an [IllegalArgumentException] should be thrownBy welchClass.compute(wrongPDS)
  }
}
